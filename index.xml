<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>stonex</title>
        <link>https://sheny1xuan.github.io/</link>
        <description>Welcome to my&#39;blog!</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Fri, 01 Oct 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://sheny1xuan.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>seata-at</title>
    <link>https://sheny1xuan.github.io/seata-at/</link>
    <pubDate>Fri, 01 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/seata-at/</guid>
    <description><![CDATA[常量 空指针 参考资料 modern-cpp-tutorial https://www.zhihu.com/question/35614219]]></description>
</item><item>
    <title>lc223.矩形面积</title>
    <link>https://sheny1xuan.github.io/lc223/</link>
    <pubDate>Thu, 30 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc223/</guid>
    <description><![CDATA[223.矩形面积 简单的考虑 计算两个图形的重叠部分，如果两个图形无重复，直接返回两个图的面积和。 考虑不重叠的情况b1x &gt;= ax2 || ax1 &gt;= bx2 || ay2 &lt;= by1 || ay1]]></description>
</item><item>
    <title>lc437.路径总和 III</title>
    <link>https://sheny1xuan.github.io/lc437/</link>
    <pubDate>Tue, 28 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc437/</guid>
    <description><![CDATA[437.路径总和 III dfs+bfs 因为从每个结点开始都有可能向下产生指定的路径和，所以我们可以从每个结点开始遍历，找到从该节点向下的所有的路径和。 1 2 3 4]]></description>
</item><item>
    <title>lc371.两整数之和</title>
    <link>https://sheny1xuan.github.io/lc371/</link>
    <pubDate>Sun, 26 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc371/</guid>
    <description><![CDATA[371.两整数之和 不使用+进行加法运算 两个数无进位加法的结果是a^b 两个数产生进位的位是a&amp;b，进位的结果就是(a&amp;b)&l]]></description>
</item><item>
    <title>lc583.两个字符串的删除操作</title>
    <link>https://sheny1xuan.github.io/lc583/</link>
    <pubDate>Sat, 25 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc583/</guid>
    <description><![CDATA[583.两个字符串的删除操作 最长公共子序列 给定两个字符串word1和word2，找出使两个字符串变为相同需要删除的字母的最少的个数 可以把这个]]></description>
</item><item>
    <title>lc430.扁平化多级双向链表</title>
    <link>https://sheny1xuan.github.io/lc430/</link>
    <pubDate>Fri, 24 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc430/</guid>
    <description><![CDATA[430.扁平化多级双向链表 迭代 没碰到一个有child部分的节点，找到当前节点儿子链表的尾结点tail，将该链表添加到当前链表中，当前节点的c]]></description>
</item><item>
    <title>lc725.分隔链表</title>
    <link>https://sheny1xuan.github.io/lc725/</link>
    <pubDate>Wed, 22 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc725/</guid>
    <description><![CDATA[725.分隔链表 计算每一部分的长度之后，每次数出指定长度的结点即可。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36]]></description>
</item><item>
    <title>lc58.最后一个单词的长度</title>
    <link>https://sheny1xuan.github.io/lc58/</link>
    <pubDate>Tue, 21 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc58/</guid>
    <description><![CDATA[58.最后一个单词的长度 从后往前遍历，找到最后一个单词 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public: int lengthOfLastWord(string s) { int n = s.size(); int idx = n - 1, ans = 0; while(s[idx] == &#39; &#39;){]]></description>
</item><item>
    <title>lc673.最长递增子序列的个数</title>
    <link>https://sheny1xuan.github.io/lc673/</link>
    <pubDate>Mon, 20 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc673/</guid>
    <description><![CDATA[673.最长递增子序列的个数 维护一个计数数组，记录每个递增子序列的个数。 按照最长递增子序列的遍历方式，如果$nums[i] &gt; nums[j]$ 如果$f[i]]]></description>
</item><item>
    <title>lc650.只有两个键的键盘</title>
    <link>https://sheny1xuan.github.io/lc650/</link>
    <pubDate>Sun, 19 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc650/</guid>
    <description><![CDATA[650.只有两个键的键盘 动态规划 $O(n^2)$ 考虑状态$f[i]$为输出恰好为$i$个$A$时的最少操作此时 ${i % j == 0}, f[i] = min{(f[i], f[j] + i / j)}$，对$j$复]]></description>
</item></channel>
</rss>
