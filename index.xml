<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>stonex</title>
        <link>https://sheny1xuan.github.io/</link>
        <description>Welcome to my&#39;blog!</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Wed, 01 Sep 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://sheny1xuan.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>lc165. 比较版本号</title>
    <link>https://sheny1xuan.github.io/lc165/</link>
    <pubDate>Wed, 01 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc165/</guid>
    <description><![CDATA[165. 比较版本号 split后双指针比较 先对字符串做split提取出每个小的版本号 之后对每个小版本号进行比较即可。 $T:O(n)$ $S:O(n)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14]]></description>
</item><item>
    <title>lc1109.航班预订统计</title>
    <link>https://sheny1xuan.github.io/lc1109/</link>
    <pubDate>Tue, 31 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1109/</guid>
    <description><![CDATA[1109. 航班预订统计 差分用于快速处理区间的增量。 当我们需要对某一数组$a[n]$,区间$[l,r]$之间添加一个增量$inc$时，也就是对差分数组]]></description>
</item><item>
    <title>lc528.按权重随机选择</title>
    <link>https://sheny1xuan.github.io/lc528/</link>
    <pubDate>Mon, 30 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc528/</guid>
    <description><![CDATA[528. 按权重随机选择 题目的意思是根据下标不同的权重产生随机数 $w[i]$代表产生随机数$i$的权重 首先将计算所有数的和，然后依次计算前缀和，均匀]]></description>
</item><item>
    <title>lc1480. 一维数组的动态和</title>
    <link>https://sheny1xuan.github.io/lc1480/</link>
    <pubDate>Sat, 28 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1480/</guid>
    <description><![CDATA[1480. 一维数组的动态和 前缀和 pre[i]表示前i个数的和 返回i+1-&gt;end 1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: vector&lt;int&gt; runningSum(vector&lt;int&gt;&amp; nums) { int n = nums.size(); vector&lt;int&gt; pre(n + 1, 0); for(int i]]></description>
</item><item>
    <title>lc881. 救生艇</title>
    <link>https://sheny1xuan.github.io/lc881/</link>
    <pubDate>Thu, 26 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc881/</guid>
    <description><![CDATA[881. 救生艇 贪心+双指针 $T:O(nlogn)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution { public: int numRescueBoats(vector&lt;int&gt;&amp; people, int limit) { sort(people.begin(), people.end()); int n = people.size(), cnt = 0; // 双指针+贪心 // 从小到大进行排序 //]]></description>
</item><item>
    <title>lc797.所有可能的路径</title>
    <link>https://sheny1xuan.github.io/lc797/</link>
    <pubDate>Wed, 25 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc797/</guid>
    <description><![CDATA[797. 所有可能的路径 DFS 有向无环图DAG不会重复访问同一个点，所以不需要记录这些点是否访问过。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution {]]></description>
</item><item>
    <title>acwing基础课ch1-位运算</title>
    <link>https://sheny1xuan.github.io/ch1_%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/ch1_%E4%BD%8D%E8%BF%90%E7%AE%97/</guid>
    <description><![CDATA[位运算 位的统计问题 计算n的二进制表示中第k位 先把第k位移动到最后一位， 然后进行判断。 lowbit(x)运算：返回x的最后一位1的位置 -x = ~x +]]></description>
</item><item>
    <title>acwing基础课ch1-前缀和与差分</title>
    <link>https://sheny1xuan.github.io/ch1_%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/ch1_%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86/</guid>
    <description><![CDATA[前缀和 一维前缀和 利用存储的部分前缀和快速计算部分数组的和 前缀和数组长度为n+1 s[0] = 0, s[i]表示nums[i]前所有数的和，不包括nums[]]></description>
</item><item>
    <title>acwing基础课ch1-双指针</title>
    <link>https://sheny1xuan.github.io/ch1_%E5%8F%8C%E6%8C%87%E9%92%88/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/ch1_%E5%8F%8C%E6%8C%87%E9%92%88/</guid>
    <description><![CDATA[双指针 两个序列双指针 归并排序 一个序列同向双指针 双指针利用某种性质将暴力(n^2)的算法优化到O(n). 实现split() 最长连续不重复子序列]]></description>
</item><item>
    <title>acwing基础课ch1-排序问题</title>
    <link>https://sheny1xuan.github.io/ch1_%E6%8E%92%E5%BA%8F%E9%97%AE%E9%A2%98/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/ch1_%E6%8E%92%E5%BA%8F%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[排序 分类 复杂度分析 快速排序 基于分治思想 主要步骤 确定分界点x，随机(一般为左端点) 调整范围，左半边小于等于x，右半边大于等于x（双指针）。 如果]]></description>
</item></channel>
</rss>
