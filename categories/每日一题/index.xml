<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>每日一题 - 分类 - stonex</title>
        <link>https://sheny1xuan.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
        <description>每日一题 - 分类 - stonex</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Wed, 01 Sep 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sheny1xuan.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>lc165. 比较版本号</title>
    <link>https://sheny1xuan.github.io/lc165/</link>
    <pubDate>Wed, 01 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc165/</guid>
    <description><![CDATA[165. 比较版本号 split后双指针比较 先对字符串做split提取出每个小的版本号 之后对每个小版本号进行比较即可。 $T:O(n)$ $S:O(n)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14]]></description>
</item><item>
    <title>lc1109.航班预订统计</title>
    <link>https://sheny1xuan.github.io/lc1109/</link>
    <pubDate>Tue, 31 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1109/</guid>
    <description><![CDATA[1109. 航班预订统计 差分用于快速处理区间的增量。 当我们需要对某一数组$a[n]$,区间$[l,r]$之间添加一个增量$inc$时，也就是对差分数组]]></description>
</item><item>
    <title>lc528.按权重随机选择</title>
    <link>https://sheny1xuan.github.io/lc528/</link>
    <pubDate>Mon, 30 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc528/</guid>
    <description><![CDATA[528. 按权重随机选择 题目的意思是根据下标不同的权重产生随机数 $w[i]$代表产生随机数$i$的权重 首先将计算所有数的和，然后依次计算前缀和，均匀]]></description>
</item><item>
    <title>lc1480. 一维数组的动态和</title>
    <link>https://sheny1xuan.github.io/lc1480/</link>
    <pubDate>Sat, 28 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1480/</guid>
    <description><![CDATA[1480. 一维数组的动态和 前缀和 pre[i]表示前i个数的和 返回i+1-&gt;end 1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: vector&lt;int&gt; runningSum(vector&lt;int&gt;&amp; nums) { int n = nums.size(); vector&lt;int&gt; pre(n + 1, 0); for(int i]]></description>
</item><item>
    <title>lc881. 救生艇</title>
    <link>https://sheny1xuan.github.io/lc881/</link>
    <pubDate>Thu, 26 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc881/</guid>
    <description><![CDATA[881. 救生艇 贪心+双指针 $T:O(nlogn)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution { public: int numRescueBoats(vector&lt;int&gt;&amp; people, int limit) { sort(people.begin(), people.end()); int n = people.size(), cnt = 0; // 双指针+贪心 // 从小到大进行排序 //]]></description>
</item><item>
    <title>lc797.所有可能的路径</title>
    <link>https://sheny1xuan.github.io/lc797/</link>
    <pubDate>Wed, 25 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc797/</guid>
    <description><![CDATA[797. 所有可能的路径 DFS 有向无环图DAG不会重复访问同一个点，所以不需要记录这些点是否访问过。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution {]]></description>
</item><item>
    <title>lc787. K站中转内最便宜的航班</title>
    <link>https://sheny1xuan.github.io/lc787/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc787/</guid>
    <description><![CDATA[787. K 站中转内最便宜的航班 Bellman_ford算法解决有边数限制的最短路问题 K站中转就是最多有k+1条边的最短路问题 acwing模板题 1 2]]></description>
</item><item>
    <title>lc1646.获取生成数组中的最大值</title>
    <link>https://sheny1xuan.github.io/lc1646/</link>
    <pubDate>Mon, 23 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1646/</guid>
    <description><![CDATA[1646. 获取生成数组中的最大值 分两种情况 奇数：nums[i] = nums[i / 2] 偶数：nums[i] = nums[i / 2] + nums[i / 2 + 1] 模拟 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17]]></description>
</item><item>
    <title>lc789.逃脱阻碍者</title>
    <link>https://sheny1xuan.github.io/lc789/</link>
    <pubDate>Sun, 22 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc789/</guid>
    <description><![CDATA[789. 逃脱阻碍者 起始点和阻碍者应该同时沿着最短路向目标移动。 由于类似于棋盘的网格状，因此最短路径距离就是曼哈顿距离。 存在以下三种情况。 存在任一阻]]></description>
</item><item>
    <title>lc443. 压缩字符串</title>
    <link>https://sheny1xuan.github.io/lc443/</link>
    <pubDate>Sat, 21 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc443/</guid>
    <description><![CDATA[443. 压缩字符串 使用额外空间 两种情况进行判断是否需要在结果中添加该字符 如果该字符是最后一个字符 或者该字符与下一个字符不相同 $T:O(n)$ $S:O(n)$ 1 2 3 4 5 6 7 8 9]]></description>
</item></channel>
</rss>
