<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>每日一题 - 分类 - stonex</title>
        <link>https://sheny1xuan.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
        <description>每日一题 - 分类 - stonex</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sheny1xuan.github.io/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>lc787. K站中转内最便宜的航班</title>
    <link>https://sheny1xuan.github.io/lc787/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc787/</guid>
    <description><![CDATA[787. K 站中转内最便宜的航班 Bellman_ford算法解决有边数限制的最短路问题 K站中转就是最多有k+1条边的最短路问题 acwing模板题 1 2]]></description>
</item><item>
    <title>lc1646.获取生成数组中的最大值</title>
    <link>https://sheny1xuan.github.io/lc1646/</link>
    <pubDate>Mon, 23 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1646/</guid>
    <description><![CDATA[1646. 获取生成数组中的最大值 分两种情况 奇数：nums[i] = nums[i / 2] 偶数：nums[i] = nums[i / 2] + nums[i / 2 + 1] 模拟 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17]]></description>
</item><item>
    <title>lc789.逃脱阻碍者</title>
    <link>https://sheny1xuan.github.io/lc789/</link>
    <pubDate>Sun, 22 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc789/</guid>
    <description><![CDATA[789. 逃脱阻碍者 起始点和阻碍者应该同时沿着最短路向目标移动。 由于类似于棋盘的网格状，因此最短路径距离就是曼哈顿距离。 存在以下三种情况。 存在任一阻]]></description>
</item><item>
    <title>lc443. 压缩字符串</title>
    <link>https://sheny1xuan.github.io/lc443/</link>
    <pubDate>Sat, 21 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc443/</guid>
    <description><![CDATA[443. 压缩字符串 使用额外空间 两种情况进行判断是否需要在结果中添加该字符 如果该字符是最后一个字符 或者该字符与下一个字符不相同 $T:O(n)$ $S:O(n)$ 1 2 3 4 5 6 7 8 9]]></description>
</item><item>
    <title>lc541.反转字符串II</title>
    <link>https://sheny1xuan.github.io/lc541/</link>
    <pubDate>Fri, 20 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc541/</guid>
    <description><![CDATA[541. 反转字符串 II 按照题意进行翻转即可，使用reverse传入泛型指针进行翻转 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public: string reverseStr(string s, int k) { int n = s.size(), cur]]></description>
</item><item>
    <title>lc345.反转字符串中的元音字母</title>
    <link>https://sheny1xuan.github.io/lc345/</link>
    <pubDate>Thu, 19 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc345/</guid>
    <description><![CDATA[345. 反转字符串中的元音字母 双指针 这里可以使用string.find(c)，如果找到了该字母返回该字母的下标，否则返回std::npos，这个是]]></description>
</item><item>
    <title>lc516.最长回文子序列</title>
    <link>https://sheny1xuan.github.io/lc516/</link>
    <pubDate>Thu, 12 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc516/</guid>
    <description><![CDATA[516. 最长回文子序列 暴力 枚举所有的子序列(子集) $T:O(n2^n)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Solution { public: int ans = 1; void dfs(string&amp; s, string&amp; path, int idx){ // cout &lt;&lt; path &lt;&lt;]]></description>
</item><item>
    <title>446.等差数列划分 II - 子序列</title>
    <link>https://sheny1xuan.github.io/lc446/</link>
    <pubDate>Wed, 11 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc446/</guid>
    <description><![CDATA[446. 等差数列划分 II - 子序列 暴力枚举所有子序列 枚举子集就是枚举所有的子序列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 typedef long long LL; class Solution {]]></description>
</item><item>
    <title>lc413.等差数列划分</title>
    <link>https://sheny1xuan.github.io/lc413/</link>
    <pubDate>Tue, 10 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc413/</guid>
    <description><![CDATA[413. 等差数列划分 暴力 枚举所有的子数组，之后对每一个数组进行判断是否满足等差数列的条件 $O(n^3)$：$O(n^2)$枚举所有数组，$O(n)]]></description>
</item><item>
    <title>lc802.找到最终的安全状态</title>
    <link>https://sheny1xuan.github.io/lc802/</link>
    <pubDate>Thu, 05 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc802/</guid>
    <description><![CDATA[802. 找到最终的安全状态 染色法(DFS) 理解题目的意思：无论怎么走必定到达终点 也就是说该节点不能与环相连接 三色标记 label[i]表示当前结点的]]></description>
</item></channel>
</rss>
