<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - stonex</title>
        <link>https://sheny1xuan.github.io/posts/</link>
        <description>所有文章 | stonex</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Fri, 08 Oct 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sheny1xuan.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>lc187.重复的DNA序列</title>
    <link>https://sheny1xuan.github.io/lc187/</link>
    <pubDate>Fri, 08 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc187/</guid>
    <description><![CDATA[187.重复的DNA序列 哈希表 哈希表记录每一个子串出现的次数，出现两次的子串加入到结果中（不重不漏）。 注意substr操作是复制整个子串，需]]></description>
</item><item>
    <title>lc434.字符串中的单词数</title>
    <link>https://sheny1xuan.github.io/lc434/</link>
    <pubDate>Thu, 07 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc434/</guid>
    <description><![CDATA[434.字符串中的单词数 实现split 双指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public: int countSegments(string s) { int cnt = 0; for(int i = 0, j = 0; j &lt; s.size(); ) { if(s[j] != &#39; &#39;)]]></description>
</item><item>
    <title>lc414.第三大的数</title>
    <link>https://sheny1xuan.github.io/lc414/</link>
    <pubDate>Wed, 06 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc414/</guid>
    <description><![CDATA[414.第三大的数 设置三个哨兵a，b，c，依次为$a&gt;b&gt;c$如果一个数满足在区间内，则可以更新对应的数。 如果num &gt; a, c = b, b]]></description>
</item><item>
    <title>DesignPattern-迭代器</title>
    <link>https://sheny1xuan.github.io/designpattern-%E8%BF%AD%E4%BB%A3%E5%99%A8/</link>
    <pubDate>Tue, 05 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/designpattern-%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid>
    <description><![CDATA[迭代器模式 对于一个容器提供一种方法顺序访问容器中的各个元素，而不必暴露该对象的内部表示。 常常使用的方法有:next()下一个元素，hasNe]]></description>
</item><item>
    <title>lc482.密钥格式化</title>
    <link>https://sheny1xuan.github.io/lc482/</link>
    <pubDate>Mon, 04 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc482/</guid>
    <description><![CDATA[482. 密钥格式化 逆序遍历 逆序遍历可以不必计算因为不够而产生的余数部分。 注意原地操作，由于字符串添加或者删除一个字符的时间复杂度是$O(n)$，所]]></description>
</item><item>
    <title>seata-at</title>
    <link>https://sheny1xuan.github.io/seata-at/</link>
    <pubDate>Fri, 01 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/seata-at/</guid>
    <description><![CDATA[常量 空指针 参考资料 modern-cpp-tutorial https://www.zhihu.com/question/35614219]]></description>
</item><item>
    <title>lc223.矩形面积</title>
    <link>https://sheny1xuan.github.io/lc223/</link>
    <pubDate>Thu, 30 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc223/</guid>
    <description><![CDATA[223.矩形面积 简单的考虑 计算两个图形的重叠部分，如果两个图形无重复，直接返回两个图的面积和。 考虑不重叠的情况b1x &gt;= ax2 || ax1 &gt;= bx2 || ay2 &lt;= by1 || ay1]]></description>
</item><item>
    <title>lc437.路径总和 III</title>
    <link>https://sheny1xuan.github.io/lc437/</link>
    <pubDate>Tue, 28 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc437/</guid>
    <description><![CDATA[437.路径总和 III dfs+bfs 因为从每个结点开始都有可能向下产生指定的路径和，所以我们可以从每个结点开始遍历，找到从该节点向下的所有的路径和。 1 2 3 4]]></description>
</item><item>
    <title>lc371.两整数之和</title>
    <link>https://sheny1xuan.github.io/lc371/</link>
    <pubDate>Sun, 26 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc371/</guid>
    <description><![CDATA[371.两整数之和 不使用+进行加法运算 两个数无进位加法的结果是a^b 两个数产生进位的位是a&amp;b，进位的结果就是(a&amp;b)&l]]></description>
</item><item>
    <title>lc583.两个字符串的删除操作</title>
    <link>https://sheny1xuan.github.io/lc583/</link>
    <pubDate>Sat, 25 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc583/</guid>
    <description><![CDATA[583.两个字符串的删除操作 最长公共子序列 给定两个字符串word1和word2，找出使两个字符串变为相同需要删除的字母的最少的个数 可以把这个]]></description>
</item></channel>
</rss>
