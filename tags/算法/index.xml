<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法 - 标签 - stonex</title>
        <link>https://sheny1xuan.github.io/tags/%E7%AE%97%E6%B3%95/</link>
        <description>算法 - 标签 - stonex</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Mon, 13 Sep 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sheny1xuan.github.io/tags/%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>447.回旋镖的数量</title>
    <link>https://sheny1xuan.github.io/lc447/</link>
    <pubDate>Mon, 13 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc447/</guid>
    <description><![CDATA[447. 回旋镖的数量 计算两两点之间的距离 假如相同距离的点为$n$个的话，则满足条件的三元组有$A_{n}^{2} = n * (n - 1)$个 1 2 3 4 5 6 7 8]]></description>
</item><item>
    <title>lc600.不含连续1的非负整数</title>
    <link>https://sheny1xuan.github.io/lc600/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc600/</guid>
    <description><![CDATA[600. 不含连续1的非负整数 暴力位运算 $O(n)$ 注意运算符优先级：“单算移关与，异或逻条赋” 关系运算符优先级要比位运算优先级要高。 1 2 3 4 5 6 7 8 9 10 11 12]]></description>
</item><item>
    <title>tips1-运算符优先级口诀</title>
    <link>https://sheny1xuan.github.io/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%A3%E8%AF%80/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%A3%E8%AF%80/</guid>
    <description><![CDATA[运算符优先级口诀 “单算移关与，异或逻条赋” “单”表示单目运算符：逻辑非(!),按位取反(~),自增(++),自减(&ndash;),取地址(]]></description>
</item><item>
    <title>lc68. 文本左右对齐</title>
    <link>https://sheny1xuan.github.io/lc68/</link>
    <pubDate>Thu, 09 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc68/</guid>
    <description><![CDATA[68. 文本左右对齐 首先理解题目：这道题要求除了最后一行两端对齐，最后一行靠左对齐。 首先先计算每一行可以放哪些单词 之后将计算每行放多少空格，额外需]]></description>
</item><item>
    <title>lc502. IPO</title>
    <link>https://sheny1xuan.github.io/lc502/</link>
    <pubDate>Wed, 08 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc502/</guid>
    <description><![CDATA[502. IPO 如果没有k的限制：依次将资本消耗从小到大进行排序，然后投资capital[i],之后w+=profits[i] 有了k的限制 首先仍是将资本]]></description>
</item><item>
    <title>lc165. 比较版本号</title>
    <link>https://sheny1xuan.github.io/lc165/</link>
    <pubDate>Wed, 01 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc165/</guid>
    <description><![CDATA[165. 比较版本号 split后双指针比较 先对字符串做split提取出每个小的版本号 之后对每个小版本号进行比较即可。 $T:O(n)$ $S:O(n)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14]]></description>
</item><item>
    <title>lc1109.航班预订统计</title>
    <link>https://sheny1xuan.github.io/lc1109/</link>
    <pubDate>Tue, 31 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1109/</guid>
    <description><![CDATA[1109. 航班预订统计 差分用于快速处理区间的增量。 当我们需要对某一数组$a[n]$,区间$[l,r]$之间添加一个增量$inc$时，也就是对差分数组]]></description>
</item><item>
    <title>lc528.按权重随机选择</title>
    <link>https://sheny1xuan.github.io/lc528/</link>
    <pubDate>Mon, 30 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc528/</guid>
    <description><![CDATA[528. 按权重随机选择 题目的意思是根据下标不同的权重产生随机数 $w[i]$代表产生随机数$i$的权重 首先将计算所有数的和，然后依次计算前缀和，均匀]]></description>
</item><item>
    <title>lc1480. 一维数组的动态和</title>
    <link>https://sheny1xuan.github.io/lc1480/</link>
    <pubDate>Sat, 28 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc1480/</guid>
    <description><![CDATA[1480. 一维数组的动态和 前缀和 pre[i]表示前i个数的和 返回i+1-&gt;end 1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: vector&lt;int&gt; runningSum(vector&lt;int&gt;&amp; nums) { int n = nums.size(); vector&lt;int&gt; pre(n + 1, 0); for(int i]]></description>
</item><item>
    <title>lc881. 救生艇</title>
    <link>https://sheny1xuan.github.io/lc881/</link>
    <pubDate>Thu, 26 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc881/</guid>
    <description><![CDATA[881. 救生艇 贪心+双指针 $T:O(nlogn)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution { public: int numRescueBoats(vector&lt;int&gt;&amp; people, int limit) { sort(people.begin(), people.end()); int n = people.size(), cnt = 0; // 双指针+贪心 // 从小到大进行排序 //]]></description>
</item></channel>
</rss>
