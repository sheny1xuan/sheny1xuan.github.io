<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>动态规划 - 标签 - stonex</title>
        <link>https://sheny1xuan.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
        <description>动态规划 - 标签 - stonex</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Sat, 25 Sep 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sheny1xuan.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/" rel="self" type="application/rss+xml" /><item>
    <title>lc583.两个字符串的删除操作</title>
    <link>https://sheny1xuan.github.io/lc583/</link>
    <pubDate>Sat, 25 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc583/</guid>
    <description><![CDATA[583.两个字符串的删除操作 最长公共子序列 给定两个字符串word1和word2，找出使两个字符串变为相同需要删除的字母的最少的个数 可以把这个]]></description>
</item><item>
    <title>lc673.最长递增子序列的个数</title>
    <link>https://sheny1xuan.github.io/lc673/</link>
    <pubDate>Mon, 20 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc673/</guid>
    <description><![CDATA[673.最长递增子序列的个数 维护一个计数数组，记录每个递增子序列的个数。 按照最长递增子序列的遍历方式，如果$nums[i] &gt; nums[j]$ 如果$f[i]]]></description>
</item><item>
    <title>lc650.只有两个键的键盘</title>
    <link>https://sheny1xuan.github.io/lc650/</link>
    <pubDate>Sun, 19 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc650/</guid>
    <description><![CDATA[650.只有两个键的键盘 动态规划 $O(n^2)$ 考虑状态$f[i]$为输出恰好为$i$个$A$时的最少操作此时 ${i % j == 0}, f[i] = min{(f[i], f[j] + i / j)}$，对$j$复]]></description>
</item><item>
    <title>lc446.等差数列划分 II - 子序列</title>
    <link>https://sheny1xuan.github.io/lc446/</link>
    <pubDate>Wed, 11 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc446/</guid>
    <description><![CDATA[446. 等差数列划分 II - 子序列 暴力枚举所有子序列 枚举子集就是枚举所有的子序列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 typedef long long LL; class Solution {]]></description>
</item></channel>
</rss>
