<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>位运算 - 标签 - stonex</title>
        <link>https://sheny1xuan.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
        <description>位运算 - 标签 - stonex</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Wed, 17 Nov 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sheny1xuan.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/" rel="self" type="application/rss+xml" /><item>
    <title>lc318.最大单词长度乘积</title>
    <link>https://sheny1xuan.github.io/lc318/</link>
    <pubDate>Wed, 17 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc318/</guid>
    <description><![CDATA[318.最大单词长度乘积 位运算哈希 考虑暴力求解，对每一个字符串进行哈希，之后遍历剩余的字符串检查是否重复 $T:O(n^2l)$,$n$是字符]]></description>
</item><item>
    <title>lc371.两整数之和</title>
    <link>https://sheny1xuan.github.io/lc371/</link>
    <pubDate>Sun, 26 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc371/</guid>
    <description><![CDATA[371.两整数之和 不使用+进行加法运算 两个数无进位加法的结果是a^b 两个数产生进位的位是a&amp;b，进位的结果就是(a&amp;b)&l]]></description>
</item><item>
    <title>lc600.不含连续1的非负整数</title>
    <link>https://sheny1xuan.github.io/lc600/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc600/</guid>
    <description><![CDATA[600. 不含连续1的非负整数 暴力位运算 $O(n)$ 注意运算符优先级：“单算移关与，异或逻条赋” 关系运算符优先级要比位运算优先级要高。 1 2 3 4 5 6 7 8 9 10 11 12]]></description>
</item><item>
    <title>acwing基础课ch1-位运算</title>
    <link>https://sheny1xuan.github.io/ch1_%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/ch1_%E4%BD%8D%E8%BF%90%E7%AE%97/</guid>
    <description><![CDATA[位运算 位的统计问题 计算n的二进制表示中第k位 先把第k位移动到最后一位， 然后进行判断。 lowbit(x)运算：返回x的最后一位1的位置 -x = ~x +]]></description>
</item></channel>
</rss>
