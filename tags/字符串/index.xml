<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>字符串 - 标签 - stonex</title>
        <link>https://sheny1xuan.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
        <description>字符串 - 标签 - stonex</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>sheny1xuan@163.com (Shen)</managingEditor>
            <webMaster>sheny1xuan@163.com (Shen)</webMaster><lastBuildDate>Fri, 15 Oct 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sheny1xuan.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/" rel="self" type="application/rss+xml" /><item>
    <title>lc38.外观数列</title>
    <link>https://sheny1xuan.github.io/lc38/</link>
    <pubDate>Fri, 15 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc38/</guid>
    <description><![CDATA[38.外观数列 字符串模拟 双指针逐位进行模拟。 注意最后结尾的时候，要对最后的字符进行单独处理。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24]]></description>
</item><item>
    <title>lc434.字符串中的单词数</title>
    <link>https://sheny1xuan.github.io/lc434/</link>
    <pubDate>Thu, 07 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc434/</guid>
    <description><![CDATA[434.字符串中的单词数 实现split 双指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public: int countSegments(string s) { int cnt = 0; for(int i = 0, j = 0; j &lt; s.size(); ) { if(s[j] != &#39; &#39;)]]></description>
</item><item>
    <title>lc58.最后一个单词的长度</title>
    <link>https://sheny1xuan.github.io/lc58/</link>
    <pubDate>Tue, 21 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc58/</guid>
    <description><![CDATA[58.最后一个单词的长度 从后往前遍历，找到最后一个单词 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public: int lengthOfLastWord(string s) { int n = s.size(); int idx = n - 1, ans = 0; while(s[idx] == &#39; &#39;){]]></description>
</item><item>
    <title>lc524.通过删除字母匹配到字典里最长单词</title>
    <link>https://sheny1xuan.github.io/lc524/</link>
    <pubDate>Tue, 14 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc524/</guid>
    <description><![CDATA[524. 通过删除字母匹配到字典里最长单词 排序+双指针 双指针：判断一个字符串是不是另一个字符串的子串采用双指针,$T:O(n)$ 排序：首先按照字符串]]></description>
</item><item>
    <title>lc68. 文本左右对齐</title>
    <link>https://sheny1xuan.github.io/lc68/</link>
    <pubDate>Thu, 09 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc68/</guid>
    <description><![CDATA[68. 文本左右对齐 首先理解题目：这道题要求除了最后一行两端对齐，最后一行靠左对齐。 首先先计算每一行可以放哪些单词 之后将计算每行放多少空格，额外需]]></description>
</item><item>
    <title>lc165. 比较版本号</title>
    <link>https://sheny1xuan.github.io/lc165/</link>
    <pubDate>Wed, 01 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc165/</guid>
    <description><![CDATA[165. 比较版本号 split后双指针比较 先对字符串做split提取出每个小的版本号 之后对每个小版本号进行比较即可。 $T:O(n)$ $S:O(n)$ 1 2 3 4 5 6 7 8 9 10 11 12 13 14]]></description>
</item><item>
    <title>acwing基础课ch2-字符串问题</title>
    <link>https://sheny1xuan.github.io/ch2_string/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/ch2_string/</guid>
    <description><![CDATA[字符串问题 字符串单模匹配 给你一个字符串haystack和needle，找出needle再haystack中第一个出现的位置。 如果needle]]></description>
</item><item>
    <title>lc443. 压缩字符串</title>
    <link>https://sheny1xuan.github.io/lc443/</link>
    <pubDate>Sat, 21 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc443/</guid>
    <description><![CDATA[443. 压缩字符串 使用额外空间 两种情况进行判断是否需要在结果中添加该字符 如果该字符是最后一个字符 或者该字符与下一个字符不相同 $T:O(n)$ $S:O(n)$ 1 2 3 4 5 6 7 8 9]]></description>
</item><item>
    <title>lc541.反转字符串II</title>
    <link>https://sheny1xuan.github.io/lc541/</link>
    <pubDate>Fri, 20 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc541/</guid>
    <description><![CDATA[541. 反转字符串 II 按照题意进行翻转即可，使用reverse传入泛型指针进行翻转 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public: string reverseStr(string s, int k) { int n = s.size(), cur]]></description>
</item><item>
    <title>lc345.反转字符串中的元音字母</title>
    <link>https://sheny1xuan.github.io/lc345/</link>
    <pubDate>Thu, 19 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://sheny1xuan.github.io/lc345/</guid>
    <description><![CDATA[345. 反转字符串中的元音字母 双指针 这里可以使用string.find(c)，如果找到了该字母返回该字母的下标，否则返回std::npos，这个是]]></description>
</item></channel>
</rss>
